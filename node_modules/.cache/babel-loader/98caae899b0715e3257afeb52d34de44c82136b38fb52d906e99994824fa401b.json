{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle responses and errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Employee API calls\nexport const employeeAPI = {\n  // Create employee\n  createEmployee: employeeData => {\n    return api.post('/employee/create', employeeData);\n  },\n  // Employee login\n  login: credentials => {\n    return api.post('/employee/login', credentials);\n  },\n  // Admin login\n  adminLogin: credentials => {\n    return api.post('/admin/login', credentials);\n  },\n  // Send reset password email\n  sendResetEmail: email => {\n    return api.post('/employee/sendmail', {\n      empEmail: email\n    });\n  },\n  // Reset password\n  resetPassword: (id, token, passwordData) => {\n    return api.patch(`/employee/resetpassword/${id}/${token}`, passwordData);\n  },\n  // Forget password reset\n  forgetPassword: (id, token, passwordData) => {\n    return api.patch(`/employee/forgetpassword/${id}/${token}`, passwordData);\n  },\n  // Update employee data\n  updateEmployee: (id, formData) => {\n    return api.patch(`/employee/updateempdata/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Get employee notifications\n  getNotifications: () => {\n    return api.get('/employee/empnotice');\n  }\n};\n\n// Timesheet API calls\nexport const timesheetAPI = {\n  // Clock in\n  clockIn: (empId, clockData) => {\n    return api.post(`/timesheet/clockin/${empId}`, clockData);\n  },\n  // Update attendance (clock out)\n  updateAttendance: (empId, attendanceData) => {\n    return api.patch(`/timesheet/empattendence/${empId}`, attendanceData);\n  }\n};\n\n// Leave API calls\nexport const leaveAPI = {\n  // Apply for leave\n  applyLeave: (empId, leaveData) => {\n    return api.post(`/leave/leaveapply/${empId}`, leaveData);\n  }\n};\n\n// Admin API calls\nexport const adminAPI = {\n  // Get all employee attendance\n  getEmployeeAttendance: () => {\n    return api.get('/admin/empattendance');\n  },\n  // Update leave status (approve/reject)\n  updateLeaveStatus: (leaveId, statusData) => {\n    return api.patch(`/admin/leavestatus/${leaveId}`, statusData);\n  }\n};\n\n// Bench API calls\nexport const benchAPI = {\n  // Get employee bench list\n  getBenchList: listData => {\n    return api.post('/bench/list', listData);\n  },\n  // Update employee status\n  updateStatus: statusData => {\n    return api.patch('/bench/update', statusData);\n  },\n  // Search employee\n  searchEmployee: letter => {\n    return api.post(`/bench/searchemployee/${letter}`);\n  }\n};\n\n// Notice/Notification API calls\nexport const noticeAPI = {\n  // Create notice\n  createNotice: (adminId, noticeData) => {\n    return api.post(`/notice/createnotice/${adminId}`, noticeData);\n  },\n  // Update notice\n  updateNotice: (noticeId, noticeData) => {\n    return api.patch(`/notice/updatenotice/${noticeId}`, noticeData);\n  },\n  // Delete notice\n  deleteNotice: noticeId => {\n    return api.delete(`/notice/deletenotice/${noticeId}`);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","employeeAPI","createEmployee","employeeData","post","login","credentials","adminLogin","sendResetEmail","email","empEmail","resetPassword","id","passwordData","patch","forgetPassword","updateEmployee","formData","getNotifications","get","timesheetAPI","clockIn","empId","clockData","updateAttendance","attendanceData","leaveAPI","applyLeave","leaveData","adminAPI","getEmployeeAttendance","updateLeaveStatus","leaveId","statusData","benchAPI","getBenchList","listData","updateStatus","searchEmployee","letter","noticeAPI","createNotice","adminId","noticeData","updateNotice","noticeId","deleteNotice","delete"],"sources":["/Users/aliasger/employee_tracking_system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle responses and errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Employee API calls\nexport const employeeAPI = {\n  // Create employee\n  createEmployee: (employeeData) => {\n    return api.post('/employee/create', employeeData);\n  },\n\n  // Employee login\n  login: (credentials) => {\n    return api.post('/employee/login', credentials);\n  },\n\n  // Admin login\n  adminLogin: (credentials) => {\n    return api.post('/admin/login', credentials);\n  },\n\n  // Send reset password email\n  sendResetEmail: (email) => {\n    return api.post('/employee/sendmail', { empEmail: email });\n  },\n\n  // Reset password\n  resetPassword: (id, token, passwordData) => {\n    return api.patch(`/employee/resetpassword/${id}/${token}`, passwordData);\n  },\n\n  // Forget password reset\n  forgetPassword: (id, token, passwordData) => {\n    return api.patch(`/employee/forgetpassword/${id}/${token}`, passwordData);\n  },\n\n  // Update employee data\n  updateEmployee: (id, formData) => {\n    return api.patch(`/employee/updateempdata/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n\n  // Get employee notifications\n  getNotifications: () => {\n    return api.get('/employee/empnotice');\n  },\n};\n\n// Timesheet API calls\nexport const timesheetAPI = {\n  // Clock in\n  clockIn: (empId, clockData) => {\n    return api.post(`/timesheet/clockin/${empId}`, clockData);\n  },\n\n  // Update attendance (clock out)\n  updateAttendance: (empId, attendanceData) => {\n    return api.patch(`/timesheet/empattendence/${empId}`, attendanceData);\n  },\n};\n\n// Leave API calls\nexport const leaveAPI = {\n  // Apply for leave\n  applyLeave: (empId, leaveData) => {\n    return api.post(`/leave/leaveapply/${empId}`, leaveData);\n  },\n};\n\n// Admin API calls\nexport const adminAPI = {\n  // Get all employee attendance\n  getEmployeeAttendance: () => {\n    return api.get('/admin/empattendance');\n  },\n\n  // Update leave status (approve/reject)\n  updateLeaveStatus: (leaveId, statusData) => {\n    return api.patch(`/admin/leavestatus/${leaveId}`, statusData);\n  },\n};\n\n// Bench API calls\nexport const benchAPI = {\n  // Get employee bench list\n  getBenchList: (listData) => {\n    return api.post('/bench/list', listData);\n  },\n\n  // Update employee status\n  updateStatus: (statusData) => {\n    return api.patch('/bench/update', statusData);\n  },\n\n  // Search employee\n  searchEmployee: (letter) => {\n    return api.post(`/bench/searchemployee/${letter}`);\n  },\n};\n\n// Notice/Notification API calls\nexport const noticeAPI = {\n  // Create notice\n  createNotice: (adminId, noticeData) => {\n    return api.post(`/notice/createnotice/${adminId}`, noticeData);\n  },\n\n  // Update notice\n  updateNotice: (noticeId, noticeData) => {\n    return api.patch(`/notice/updatenotice/${noticeId}`, noticeData);\n  },\n\n  // Delete notice\n  deleteNotice: (noticeId) => {\n    return api.delete(`/notice/deletenotice/${noticeId}`);\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}