{"ast":null,"code":"var _jsxFileName = \"/Users/aliasger/employee_tracking_system/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored auth data on component mount\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = (userData, authToken) => {\n    setUser(userData);\n    setToken(authToken);\n    localStorage.setItem('token', authToken);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const isAuthenticated = () => {\n    return !!token && !!user;\n  };\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.empRole) === 'Admin' || (user === null || user === void 0 ? void 0 : user.role) === 'Admin';\n  };\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    isAuthenticated,\n    isAdmin,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","storedToken","localStorage","getItem","storedUser","JSON","parse","login","userData","authToken","setItem","stringify","logout","removeItem","isAuthenticated","isAdmin","empRole","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aliasger/employee_tracking_system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored auth data on component mount\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    \n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = (userData, authToken) => {\n    setUser(userData);\n    setToken(authToken);\n    localStorage.setItem('token', authToken);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n\n  const isAuthenticated = () => {\n    return !!token && !!user;\n  };\n\n  const isAdmin = () => {\n    return user?.empRole === 'Admin' || user?.role === 'Admin';\n  };\n\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    isAuthenticated,\n    isAdmin,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE/C,IAAIF,WAAW,IAAIG,UAAU,EAAE;MAC7BN,QAAQ,CAACG,WAAW,CAAC;MACrBL,OAAO,CAACS,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;IACjC;IACAJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;IACrCb,OAAO,CAACY,QAAQ,CAAC;IACjBV,QAAQ,CAACW,SAAS,CAAC;IACnBP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,SAAS,CAAC;IACxCP,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACH,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdI,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAO,CAAC,CAACjB,KAAK,IAAI,CAAC,CAACF,IAAI;EAC1B,CAAC;EAED,MAAMoB,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAO,CAAApB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEqB,OAAO,MAAK,OAAO,IAAI,CAAArB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,IAAI,MAAK,OAAO;EAC5D,CAAC;EAED,MAAMC,KAAK,GAAG;IACZvB,IAAI;IACJE,KAAK;IACLU,KAAK;IACLK,MAAM;IACNE,eAAe;IACfC,OAAO;IACPhB;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACgC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAChCA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,GAAA,CAtDWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}